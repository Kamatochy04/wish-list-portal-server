

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
generator client {
  provider = "prisma-client-js"
}

model User {
  id    Int @id @default(autoincrement()) @unique

  user_name  String   
  email String @unique 
  password_hash String
  salt  Int

  session_token  SessionToken?
  events  Events[]
  invitation  Invitation[]
  gifts Gift[]
}


model SessionToken {
  id    Int @id @default(autoincrement()) @unique

  token String
  expires_at  DateTime
  created_at  DateTime @default(now())

  user  User   @relation(fields: [user_id], references: [id])
  user_id Int   @unique
}

model Events {
  id  Int @id @default(autoincrement()) @unique

  title String 
  description String
  date  DateTime 
  is_public Boolean
  event_type  String
  price_limit Int
  rules   String

  invitations Invitation[]

  user  User @relation(references: [id], fields: [user_id] )
  user_id Int @unique

  gift  Gift[]

  created_at  DateTime @default(now())
  updated_at  DateTime 
}

model Invitation {
  id  Int @id @default(autoincrement()) @unique

  event Events @relation(fields: [event_id], references: [id])
  event_id  Int @unique

  user User @relation(references: [id], fields: [user_id])
  user_id Int @unique

  status InvitationStatus @default(IN_EXPECTATION)
  text  String

}

model Gift {
  id  Int @id @default(autoincrement())
  title String
  price Int
  description String
  image_url String

  created_at  DateTime @default(now())
  updated_at  DateTime

  events Events[]

  user User @relation(fields: [user_id], references: [id])
  user_id Int @unique
}

enum InvitationStatus {
  IN_EXPECTATION
  ACCEPTED
  REJECTED
}

