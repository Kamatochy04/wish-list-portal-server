services:
  # auth-service:
  #   build: ./src/auth-service
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./src/auth-service:/app
  #     - /app/node_modules
  #   environment:
  #     - NODE_ENV=DEVELOP
  #     - PORT=3000
  #   command: npm run dev

  # event-service:
  #   build: ./src/event-service
  #   ports:
  #     - "3001:3001"
  #   volumes:
  #     - ./src/event-service:/app
  #     - /app/node_modules
  #   environment:
  #     - NODE_ENV=DEVELOP
  #     - PORT=3001
  #   command: npm run dev

  # gift-service:
  #   build: ./src/gift-service
  #   ports:
  #     - "3002:3002"
  #   volumes:
  #     - ./src/gift-service:/app
  #     - /app/node_modules
  #   environment:
  #     - NODE_ENV=DEVELOP
  #     - PORT=3002
  #   command: npm run dev

  # invitation-service:
  #   build: ./src/invitation-service
  #   ports:
  #     - "3003:3003"
  #   volumes:
  #     - ./src/invitation-service:/app
  #     - /app/node_modules
  #   environment:
  #     - NODE_ENV=DEVELOP
  #     - PORT=3003
  #   command: npm run dev

  # user-service:
  #   build: ./src/user-service
  #   ports:
  #     - "3004:3004"
  #   volumes:
  #     - ./src/user-service:/app
  #     - /app/node_modules
  #   environment:
  #     - NODE_ENV=DEVELOP
  #     - PORT=3004
  #   command: npm run dev
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: test_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data # Сохранение данных
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test -d test_db"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
